version: '3.8'

services:
  audiodeck:
    build: .
    container_name: audiodeck-app
    ports:
      - "4000:4000"
    volumes:
      - audiodeck_clips:/app/backend/clips
      - audiodeck_logs:/app/logs
    environment:
      - NODE_ENV=production
      - PORT=4000
      - MAX_FILE_SIZE=26214400
      - MAX_DURATION=1200
      - CLEANUP_INTERVAL=1800000
      - FILE_EXPIRY=3600000
      - MAX_STORAGE=524288000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:4000/api/test', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - audiodeck-network

  # Optional: Add nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: audiodeck-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - audiodeck
    restart: unless-stopped
    networks:
      - audiodeck-network

volumes:
  audiodeck_clips:
    driver: local
  audiodeck_logs:
    driver: local

networks:
  audiodeck-network:
    driver: bridge 