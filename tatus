[33mfbe31cd[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mfeature/upload-improvements[m[33m)[m Add comprehensive debugging for status tracking - Add logging for download object state - Add logging for SSE message content - Help identify why status isn't being sent correctly
[33m9a15683[m Add debugging for status tracking - Add logging when audio extraction phase is detected - Add logging to see what status is being sent in SSE messages - Help identify why status messages aren't appearing
[33m3f79885[m Add audio extraction phase detection and status messages - Detect [ExtractAudio] phase in yt-dlp output - Show 'Processing audio...' message during extraction - Send status information via SSE - Update frontend to display different messages for download vs extraction phases
[33m1f3c190[m Add frontend debugging for progress updates - Add logging to see what progress updates frontend receives - Add logging for updateProgress calls - Help identify why frontend shows final size immediately
[33m584f668[m Improve progress tracking responsiveness - Add debugging for intermediate progress updates - Reduce SSE interval from 1000ms to 100ms - Force immediate SSE updates when progress changes - Should now show smooth progress updates instead of jumping from 0B to final size
[33m4a9327d[m Fix progress parsing to handle /NA values - Add validation to skip progress lines with invalid total bytes - Only process progress when total bytes are valid numbers - Should now capture real progress from valid yt-dlp output lines
[33m8385acb[m Add debugging to progress parsing - Add regex match result logging - Add parsed bytes logging - Add download tracking update logging - Help identify why progress isn't being captured
[33m3f9d951[m Fix yt-dlp progress parsing regex - Remove download: prefix requirement - Match actual yt-dlp output format (downloaded/total) - Should now capture real-time progress with byte information
[33m328708e[m Fix videoName scope issue and add yt-dlp debugging - Pass videoName to startProgressTracking function - Add raw yt-dlp output logging to debug progress parsing - Fix ReferenceError in SSE completion handler
[33m8f85a4d[m Implement async download with real-time progress tracking - Make backend return immediately with downloadId - Handle download asynchronously to allow SSE progress tracking - Update frontend to wait for SSE completion - Remove immediate progress updates in favor of real-time tracking - Fix byte tracking and progress display
[33m581decc[m Add comprehensive debugging for SSE connection - Add response data logging to see what backend returns - Add SSE URL logging to verify connection attempt - Add detailed error logging for SSE failures - Help identify why real-time progress isn't working
[33m47cc37b[m Add comprehensive SSE debugging - Add detailed console logging to SSE endpoint - Add request headers logging - Add test endpoint for route verification - Add connection lifecycle logging - Help identify why SSE connection is failing
[33mc7bead1[m Add file size and download amount display to progress bar - Add fileSize and downloadedSize state variables - Update updateProgress to accept and display byte information - Show file size and downloaded amount below progress bar - Update SSE message handler to pass byte data - Update simulated progress calls for consistency - Help troubleshoot real-time progress tracking
[33m502e5a9[m Add comprehensive debugging for progress tracking - Add --newline flag to yt-dlp commands for better output parsing - Add multiple progress format parsing (bytes and percentage) - Add detailed SSE connection debugging - Add fallback to simulated progress if SSE fails - Help identify why real-time progress isn't working
[33m18b7d41[m[33m ([m[1;31morigin/feature/upload-improvements[m[33m)[m Implement real-time progress tracking for video downloads - Add Server-Sent Events (SSE) endpoint for progress updates - Track actual download progress based on file size - Parse yt-dlp progress output for real-time updates - Display downloaded/total bytes in progress bar - Replace simulated progress with actual download progress
[33m6b4bd2b[m Restore video title extraction functionality - Add back video title extraction before download - Include platform-specific fallback naming for YouTube, TikTok, Twitch - Pass extracted video title to parent component - Truncate long titles for display (50 character limit)
[33me50bc58[m Fix zoom function and improve slider styling - Add proper CSS styling for range slider thumb - Add debugging logs to zoom functions - Ensure zoom buttons and slider work correctly - Add zoom-slider class for custom styling
[33m144a6ba[m Update progress bar styling to match site design - Change progress bar gradient to blue/purple (#A44EFF to #427BFF) - Update icon from lightning bolt to chart emoji () - Match zoom slider color scheme for consistency - Improve visual cohesion across the application
[33m5eb7b78[m Fix WaveSurfer audio loading with multiple approaches - Add /clips proxy to Vite config for audio file serving - Use full backend URL for WaveSurfer to avoid proxy issues - Add WebAudio backend and additional WaveSurfer options - Add fallback mechanism with retry logic for audio loading - Should resolve DEMUXER_ERROR_COULD_NOT_OPEN error
[33m69cb719[m Fix WaveSurfer audio loading issues - Use relative path for audio files to work with Vite proxy - Add better error handling for WaveSurfer load errors - Add detailed logging for debugging audio file loading - Should resolve DEMUXER_ERROR_COULD_NOT_OPEN error
[33mdc68eba[m Fix missing name parameter in video download request - Add required name parameter to /api/youtube POST request - Backend expects both url and name parameters - Should resolve 400 Bad Request error
[33m41c48d8[m Add Vite proxy configuration for API calls - Configure proxy to forward /api requests to backend server - Fix API calls going to Vite dev server instead of backend - Should resolve 404 errors for API endpoints
[33m0bd60b8[m Add detailed debugging to track progress bar behavior - Add console logs to track progress function calls - Add detailed logging for duration check and download process - Help identify exactly where progress bar is being hidden
[33mea7ed80[m Fix video download progress bar issue - Add missing /api/youtube/duration endpoint - Improve duration check error handling - Prevent progress bar from disappearing on duration check failure - Allow download to continue even if duration check fails
[33m2892666[m Add progress bar section below upload areas - Add progress bar state management - Add progress bar UI component with gradient styling - Integrate progress bar with file upload and video download - Show progress during upload/download operations - Auto-hide progress bar after completion
[33m6524e92[m[33m ([m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m, [m[1;32mmaster[m[33m)[m Revert to clean state before queue system - Remove all queue management features - Restore simple upload functionality - Fix UI issues caused by progress tracking
[33m2983832[m Merge branch 'master' of https://github.com/cb-builds/AudioDeck
[33m62b0a9f[m Fix API endpoint URLs for Docker deployment - Replace hardcoded localhost URLs with relative paths - Fix upload, download, and trim functionality - Should resolve backend connectivity issues in Docker
[33m22f5687[m Update README.md
[33m8c0d245[m Fix README formatting - Replace HTML header with proper Markdown - Remove corrupted text at bottom - Restore clean formatting
[33m27c19bc[m Add package linking workflow - Links existing package to repository - Makes package public - Should appear on Packages page
[33mc3dc7de[m Use PAT_TOKEN for authentication - Replace GITHUB_TOKEN with PAT_TOKEN - Should resolve 403 permission errors - Use Personal Access Token for better permissions
[33md9b8797[m Add package creation step to main workflow - Creates package via API before building - Uses error handling to continue if package exists - Should resolve 403 permission errors
[33m65e2f72[m Add package creation workflow - Creates package first via API 